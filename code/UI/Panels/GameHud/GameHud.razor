@using Sandbox;
@using Sandbox.UI;
@namespace Battlebugs
@inherits Panel
@attribute [StyleSheet]

<root>
	<div class="header">
		<div class="player">
			@if (GameManager.Instance.Boards.Count > 0)
			{
				var player = GameManager.Instance.Boards.ElementAt(0);
				<img src="ui/player-banner.png" />
				<div class="content">
					@if (player.Network.OwnerConnection is null)
					{
						<img src="ui/cpu.png" />
					}
					else
					{
						<img src=@($"avatar:{player.Network.OwnerConnection.SteamId}") />
					}
					<span class="name">@player.GameObject.Name</span>
					<span class="score">0</span>
				</div>
			}
		</div>
		<div class="banner">@GetHeader()</div>
		<div class="player opponent">
			@if (GameManager.Instance.Boards.Count > 1)
			{
				var oppponent = GameManager.Instance.Boards.ElementAt(1);
				if (oppponent.IsValid())
				{
					<img src="ui/player-banner.png" />
					<div class="content">
						@if (oppponent.Network.OwnerConnection is null)
						{
							<img src="ui/cpu.png" />
						}
						else
						{
							<img src=@($"avatar:{oppponent.Network.OwnerConnection.SteamId}") />
						}
						<span class="name">@oppponent.GameObject.Name</span>
						<span class="score">0</span>
					</div>
				}
			}
		</div>
	</div>
</root>

@code
{
	public static GameHud Instance { get; private set; }

	protected override void OnAfterTreeRender(bool firstTime)
	{
		base.OnAfterTreeRender(firstTime);

		if (firstTime)
		{
			Instance = this;
		}
	}

	string GetHeader()
	{
		if (GameManager.Instance.State == GameState.Placing)
		{
			return "Place your bugs!";
		}
		if (GameManager.Instance.CurrentPlayer == BoardManager.Local)
		{
			return "It's your turn!";
		}
		return "Your opponent is thinking...";
	}

	protected override int BuildHash() => System.HashCode.Combine(GameManager.Instance.State, GetHeader());
}